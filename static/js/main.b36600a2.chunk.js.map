{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","payload","id","name","number","removeContact","changeFilter","itemsReducer","createReducer","state","filter","filterReducer","_","combineReducers","items","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","getFilter","getContacts","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","contact","includes","ContactForm","useState","setName","setNumber","useSelector","handleChangeForm","event","target","value","dispatch","useDispatch","handleUniqueContact","allContasts","newName","find","onSubmit","preventDefault","uuidv4","alert","className","s","form","label","type","onChange","pattern","title","required","input","btn","ContactListItem","onRemove","listItem","onClick","ContactList","length","list","map","Filter","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b36600a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2Q7i2\",\"input\":\"Filter_input__3w-4Q\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\r\n  \"contacts/add\",\r\n  ({ id, name, number }) => ({\r\n    payload: {\r\n      id,\r\n      name,\r\n      number,\r\n    },\r\n  })\r\n);\r\nexport const removeContact = createAction(\"contacts/remove\");\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n// export const addContact = ({ id, name, number }) => ({\r\n//   type: actionsTypes.ADD,\r\n//   payload: { id, name, number },\r\n// });\r\n\r\n// export const removeContact = (contactId) => ({\r\n//   type: actionsTypes.REMOVE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const changeFilter = (value) => ({\r\n//   type: actionsTypes.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, removeContact, changeFilter } from \"./contacts-actions\";\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: \"\",\r\n//   },\r\n// };\r\nconst initialContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst itemsReducer = createReducer(initialContacts, {\r\n  [addContact]: (state, { payload }) => {\r\n    return [payload, ...state];\r\n  },\r\n  [removeContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","export const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const allContacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { addContact } from \"../../redux/contacts/contacts-actions\";\nimport s from \"./ContactForm.module.css\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(getContacts);\n\n  const handleChangeForm = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const dispatch = useDispatch();\n  const onSubmit = ({ id, name, number }) =>\n    dispatch(addContact({ id, name, number }));\n\n  const handleSubmitForm = (event) => {\n    event.preventDefault();\n    const uniqueContact = handleUniqueContact(contacts, name);\n    if (!uniqueContact) {\n      alert(`${name} is already in contacts. Enter another name.`);\n      return;\n    }\n\n    onSubmit({ id: uuidv4(), name, number });\n\n    reset();\n  };\n\n  const handleUniqueContact = (allContasts, newName) => {\n    const isExistContact = !!allContasts.find(\n      (contact) => contact.name === newName\n    );\n    return !isExistContact;\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeForm}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeForm}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр, может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          className={s.input}\n        />\n      </label>\n      <button className={s.btn}>Add contact</button>\n    </form>\n  );\n}\n// const mapStateToProps = (state) => {\n//   return {\n//     contacts: state.contacts.items,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onSubmit: ({ id, name, number }) =>\n//       dispatch(addContact({ id, name, number })),\n//   };\n// };\n\n//  connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { removeContact } from \"../../redux/contacts/contacts-actions\";\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\n\nimport s from \"./ContactList.module.css\";\n\nconst ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li className={s.listItem}>\n      <span className={s.name}>{name}: </span>\n      <span className={s.number}>{number}</span>\n      <button onClick={() => onRemove(id)} className={s.btn}>\n        Deleted\n      </button>\n    </li>\n  );\n};\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  const onRemove = (id) => dispatch(removeContact(id));\n\n  if (contacts.length === 0) return null;\n\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => (\n        <ContactListItem key={contact.id} {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\n\nimport s from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const onChange = (event) => dispatch(changeFilter(event.target.value));\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nexport default function App() {\n  return (\n    <div className=\"contaiter\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IfWo\",\"label\":\"ContactForm_label__1LAt2\",\"input\":\"ContactForm_input__3FnEZ\",\"btn\":\"ContactForm_btn__3m4Lx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__2rUvG\",\"number\":\"ContactList_number__12mUZ\",\"btn\":\"ContactList_btn__3rnhn\"};"],"sourceRoot":""}